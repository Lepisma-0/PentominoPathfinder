class Node {
  public int x;
  public int y;
  public int z;
  public int from;
  public boolean eval;
  
  public Node(int x, int y) {
    this.x = x;
    this.y = y;
  }
  
  public void setValues(int z, int from) {
    this.z = z;
    this.from = from;
  }
  
  void empty() {
    z = 0;
    from = 0;
    eval = false;
  }
  
  public boolean handle(Node other) {
    if (x == other.x && y == other.y) {
      if (z > other.z) {
        z = other.z;
        println("It happened!!!!!!");
      }
      return true;
    }
    
    return false;
  }
}

class LayoutData {
  public byte[][] board;
  public byte[][] depth;
  public int score;
  
  public LayoutData(byte[][] board, byte[][] depth, int score) {
    this.score = score;
    
    this.board = new byte[boardX][boardY];
    for(int i = 0; i < board.length; i++) this.board[i] = board[i].clone();
    
    this.depth = new byte[boardX][boardY];
    for(int i = 0; i < depth.length; i++) this.depth[i] = depth[i].clone();
  }
}
  
// Pentomino coordinates by hans314
byte[][][] pieces = {
    // N
    {
        {0, 0, 0, 1, 0, 2, 1, 2, 1, 3} ,
        {0, 1, 0, 2, 0, 3, 1, 0, 1, 1} ,
        {0, 1, 1, 1, 2, 0, 2, 1, 3, 0} ,
        {0, 0, 1, 0, 2, 0, 2, 1, 3, 1} ,
        {0, 0, 0, 1, 1, 1, 1, 2, 1, 3} ,
        {0, 2, 0, 3, 1, 0, 1, 1, 1, 2} ,
        {0, 1, 1, 0, 1, 1, 2, 0, 3, 0} ,
        {0, 0, 1, 0, 1, 1, 2, 1, 3, 1} ,
    },
    // F
    {
        {0, 1, 1, 0, 1, 1, 1, 2, 2, 2} ,
        {0, 1, 1, 0, 1, 1, 1, 2, 2, 0} ,
        {0, 1, 1, 1, 1, 2, 2, 0, 2, 1} ,
        {0, 1, 1, 0, 1, 1, 2, 1, 2, 2} ,
        {0, 0, 1, 0, 1, 1, 1, 2, 2, 1} ,
        {0, 2, 1, 0, 1, 1, 1, 2, 2, 1} ,
        {0, 1, 0, 2, 1, 0, 1, 1, 2, 1} ,
        {0, 0, 0, 1, 1, 1, 1, 2, 2, 1} ,
    },
    // P
    {
        {0, 0, 0, 1, 0, 2, 1, 1, 1, 2} ,
        {0, 0, 0, 1, 0, 2, 1, 0, 1, 1} ,
        {0, 1, 1, 0, 1, 1, 2, 0, 2, 1} ,
        {0, 0, 1, 0, 1, 1, 2, 0, 2, 1} ,
        {0, 0, 0, 1, 1, 0, 1, 1, 1, 2} ,
        {0, 1, 0, 2, 1, 0, 1, 1, 1, 2} ,
        {0, 0, 0, 1, 1, 0, 1, 1, 2, 0} ,
        {0, 0, 0, 1, 1, 0, 1, 1, 2, 1} ,
    },
    // Y
    {
        {0, 0, 0, 1, 0, 2, 0, 3, 1, 2} ,
        {0, 0, 0, 1, 0, 2, 0, 3, 1, 1} ,
        {0, 1, 1, 1, 2, 0, 2, 1, 3, 1} ,
        {0, 0, 1, 0, 2, 0, 2, 1, 3, 0} ,
        {0, 1, 1, 0, 1, 1, 1, 2, 1, 3} ,
        {0, 2, 1, 0, 1, 1, 1, 2, 1, 3} ,
        {0, 0, 1, 0, 1, 1, 2, 0, 3, 0} ,
        {0, 1, 1, 0, 1, 1, 2, 1, 3, 1} ,
    },
    // Z
    {
        {0, 0, 1, 0, 1, 1, 1, 2, 2, 2} ,
        {0, 2, 1, 0, 1, 1, 1, 2, 2, 0} ,
        {0, 1, 0, 2, 1, 1, 2, 0, 2, 1} ,
        {0, 0, 0, 1, 1, 1, 2, 1, 2, 2} ,
    },
    // V
    {
        {0, 0, 0, 1, 0, 2, 1, 2, 2, 2} ,
        {0, 0, 0, 1, 0, 2, 1, 0, 2, 0} ,
        {0, 2, 1, 2, 2, 0, 2, 1, 2, 2} ,
        {0, 0, 1, 0, 2, 0, 2, 1, 2, 2} ,
    },
    // U
    {
        {0, 0, 0, 1, 0, 2, 1, 0, 1, 2} ,
        {0, 0, 0, 1, 1, 1, 2, 0, 2, 1} ,
        {0, 0, 0, 1, 1, 0, 2, 0, 2, 1} ,
        {0, 0, 0, 2, 1, 0, 1, 1, 1, 2} ,
    },
    // T
    {
        {0, 2, 1, 0, 1, 1, 1, 2, 2, 2} ,
        {0, 0, 1, 0, 1, 1, 1, 2, 2, 0} ,
        {0, 1, 1, 1, 2, 0, 2, 1, 2, 2} ,
        {0, 0, 0, 1, 0, 2, 1, 1, 2, 1} ,
    },
    // L
    {
        {0, 0, 0, 1, 0, 2, 0, 3, 1, 3} ,
        {0, 0, 0, 1, 0, 2, 0, 3, 1, 0} ,
        {0, 1, 1, 1, 2, 1, 3, 0, 3, 1} ,
        {0, 0, 1, 0, 2, 0, 3, 0, 3, 1} ,
        {0, 0, 1, 0, 1, 1, 1, 2, 1, 3} ,
        {0, 3, 1, 0, 1, 1, 1, 2, 1, 3} ,
        {0, 0, 0, 1, 1, 0, 2, 0, 3, 0} ,
        {0, 0, 0, 1, 1, 1, 2, 1, 3, 1} ,
    },
    // X
    {
        {0, 1, 1, 0, 1, 1, 1, 2, 2, 1} ,
    },
    // I
    {
        {0, 0, 0, 1, 0, 2, 0, 3, 0, 4} ,
        {0, 0, 1, 0, 2, 0, 3, 0, 4, 0} ,
    },
    // W
    {
        {0, 2, 1, 1, 1, 2, 2, 0, 2, 1} ,
        {0, 0, 1, 0, 1, 1, 2, 1, 2, 2} ,
        {0, 1, 0, 2, 1, 0, 1, 1, 2, 0} ,
        {0, 0, 0, 1, 1, 1, 1, 2, 2, 2} ,
    },
};  
